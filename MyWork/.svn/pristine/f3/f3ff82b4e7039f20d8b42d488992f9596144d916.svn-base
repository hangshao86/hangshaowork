package com.zqh.mywork;

import java.io.IOException;
import java.io.StringReader;
import java.sql.Struct;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.ParseException;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.impl.conn.DefaultClientConnection;
import org.apache.http.util.EntityUtils;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserException;
import org.xmlpull.v1.XmlPullParserFactory;

import com.example.mywork.R;

import android.R.bool;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.DialogInterface.OnClickListener;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.Toast;

public class Login extends Activity {
	private EditText et_username,et_password;
	private CheckBox cb_savepwd,cb_autologin;
	private String path="http://10.0.2.2/get_data.xml";
	private String[] temp={"",""};
	private String[] temp2={"",""};
	
	static String YES = "yes";
	static String NO = "no";
	static String name, password,check1,check2;
	private String checktemp="",checktemp2="";
	private String isMemory = "";//isMemory变量用来判断SharedPreferences有没有数据，包括上面的YES和NO
	private String FILE = "saveUserNamePwd";//用于保存SharedPreferences的文件
	private SharedPreferences sp = null;//声明一个SharedPreferences
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login_activity);
		
		et_username=(EditText)findViewById(R.id.et_username);
		et_password=(EditText)findViewById(R.id.et_pwd);
		cb_savepwd=(CheckBox)findViewById(R.id.savepwd);
		cb_autologin=(CheckBox) findViewById(R.id.autologin);
		
		savepassword();
		
	
	}
	private void savepassword()
	{
		sp = getSharedPreferences(FILE, MODE_PRIVATE);
		isMemory = sp.getString("isMemory", NO);
		
		if(isMemory.equals(YES))
		{
			name = sp.getString("name", "");
			password = sp.getString("password", "");
			checktemp=sp.getString("check1","false");
			et_username.setText(name);
			et_password.setText(password);
			if(checktemp=="true")
				cb_savepwd.setChecked(true);
		}
		   
	}
	public void onsavepassword() {
		if (cb_savepwd.isChecked()) {
		if (sp == null) {
		sp = getSharedPreferences(FILE, MODE_PRIVATE);
		}
		checktemp="true";
		Editor edit = sp.edit();
		edit.putString("name", et_username.getText().toString());
		edit.putString("password", et_password.getText().toString());
		edit.putString("isMemory", YES);
		edit.putString("check1", checktemp);
		edit.commit();
		} 
		else if (!cb_savepwd.isChecked())
		{
		if (sp == null) {
		sp = getSharedPreferences(FILE, MODE_PRIVATE);
		}
		Editor edit = sp.edit();
		edit.putString("isMemory", NO);
		edit.commit();
		}
	}
	public void OnClick(View view)
	{
		switch (view.getId()) {
		case R.id.btn_login:
			onsavepassword();
			
			Intent selectIntent=new Intent(Login.this,TActivity.class);
			startActivity(selectIntent);
			break;

		case R.id.btn_register:
			Intent registerIntent=new Intent(this,RegisterActivity.class);
			startActivity(registerIntent);
			break;
		case R.id.getpwd:
			Intent requestpasswordIntent=new Intent(this,RequestPasswordActivity.class);
			startActivity(requestpasswordIntent);
			break;
		}
	}
	
	
    private String[] parseXMLWithPull(String xmlData) {
    	String username="";
		String password="";
    	try {
    		
			XmlPullParserFactory factory=XmlPullParserFactory.newInstance();
			XmlPullParser xmlPullParser=factory.newPullParser();
			xmlPullParser.setInput(new StringReader(xmlData));
			int eventType=xmlPullParser.getEventType();
			
			while (eventType!=xmlPullParser.END_DOCUMENT) {
				String nodeName=xmlPullParser.getName();
				switch (eventType) {
				case XmlPullParser.START_TAG:
				{
					if("user".equals(nodeName)){
						temp[0]=xmlPullParser.nextText();
						//et_username.setText(username);
					}
					else if("pwd".equals(nodeName)){
						temp[1]=xmlPullParser.nextText();
					//	et_password.setText(password);
					}
					break;
				}
				case XmlPullParser.END_TAG:
				{
					
				}
				default:
					
					break;
				}
			   eventType=xmlPullParser.next();
				
			}
			
		} catch (XmlPullParserException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	return temp;
	}
    class MyAsyncTask extends AsyncTask<String, Void, String[]>
    {

		@Override
		protected String[] doInBackground(String... params) {
			// TODO Auto-generated method stub
			String  temp4="";
			try {
				HttpClient httpClient=new DefaultHttpClient();
				HttpGet httpGet=new HttpGet(params[0]);
				HttpResponse httpResponse=httpClient.execute(httpGet);
				if(httpResponse.getStatusLine().getStatusCode()==200)
				{
					HttpEntity entity=httpResponse.getEntity();
					String response=EntityUtils.toString(entity,"utf-8");
				
				temp2=parseXMLWithPull(response);
					Log.i("tag2",temp2[0]);
				}
			} catch (ClientProtocolException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			return temp2;
			
		}
		@Override
		protected void onPostExecute(String[] result) {
			// TODO Auto-generated method stub
			
			
			et_username.setText(result[0]);
			et_password.setText(result[1]);
		}
    }
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
}
