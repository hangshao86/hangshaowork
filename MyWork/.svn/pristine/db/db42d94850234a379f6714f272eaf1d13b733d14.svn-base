package com.zqh.mywork;

import com.example.mywork.R;


import android.app.Activity;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.os.Bundle;
import android.renderscript.Element;
import android.view.View;
import android.view.View.OnFocusChangeListener;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class RegisterActivity  extends Activity{
	private MySQL dbHelper;
	private SQLiteDatabase  db;
	private String sql_username,sql_email;
	private EditText register_etname;
	private EditText register_et_mailboxname;
	private EditText register_et_dormitoryname;
	private EditText register_etpassword;
	private EditText register_again_etpassword;
	private TextView register_errortip_name;
	private TextView register_errortip_mailbox;
	private TextView register_errortip_dormitory;
	private TextView register_errortip_password;
	private TextView register_errortip_again_password;
	
   @Override
   protected void onCreate(Bundle savedInstanceState) {
	   // TODO Auto-generated method stub
	   super.onCreate(savedInstanceState);
	   setContentView(R.layout.register_activity);
	   register_etname=(EditText) findViewById(R.id.register_etname);
	   register_et_mailboxname=(EditText) findViewById(R.id.register_et_mailboxname);
	   register_et_dormitoryname=(EditText) findViewById(R.id.register_et_dormitoryname);
	   register_etpassword=(EditText) findViewById(R.id.register_etpassword);
	   register_again_etpassword=(EditText) findViewById(R.id.register_again_etpassword);
	   register_errortip_name=(TextView) findViewById(R.id.register_errortip_name);
	   register_errortip_mailbox=(TextView) findViewById(R.id.register_errortip_mailbox);
	   register_errortip_dormitory=(TextView) findViewById(R.id.register_errortip_dormitory);
	   register_errortip_password=(TextView) findViewById(R.id.register_errortip_password);
	   register_errortip_again_password=(TextView) findViewById(R.id.register_errortip_again_password);
	    
	   dbHelper=new MySQL(this, "User.db", null, 1);
	   db=dbHelper.getWritableDatabase();
	
	   FocusProc();
   }
   public void FocusProc()
   {
	   sql_username="select count(*) from User where username='"+register_etname.getText().toString()+"'";
	   sql_email="select count(*) from User where email='"+register_errortip_mailbox.getText().toString()+"'";
	   register_etname.setOnFocusChangeListener(new OnFocusChangeListener() {
	  
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			if(!hasFocus)
			{

			      if(register_etname.getText().toString()==null || register_etname.getText().toString()==""){
					   register_errortip_name.setText(R.string.errortip_name2);
					   register_errortip_name.setVisibility(View.VISIBLE);
				   }
				   else if(db.rawQuery(sql_username, null).getCount()>0)
				   {
					   register_errortip_name.setText(R.string.errortip_name);
				   }
				   else{
					   register_errortip_name.setVisibility(View.INVISIBLE);
				   }
			}
			
		}
	});
	   register_et_mailboxname.setOnFocusChangeListener(new OnFocusChangeListener() {
		
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			if(!hasFocus)
			{
				if(register_et_mailboxname.getText().toString()==null || register_et_mailboxname.getText().toString()==""){
					 register_errortip_mailbox.setText(R.string .errortip_name2);
					 register_errortip_mailbox.setVisibility(View.VISIBLE);
				}
				else if(db.rawQuery(sql_email,null).getCount()>0)
				{
					register_errortip_mailbox.setText("*邮箱已注册");
				}
				else {
					register_errortip_mailbox.setVisibility(View.INVISIBLE);
				}
			}
		}
	});
	   register_et_dormitoryname.setOnFocusChangeListener(new OnFocusChangeListener() {
		
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			if(!hasFocus)
			{
				if(register_et_dormitoryname.getText()==null|| register_et_dormitoryname.getText().toString()==""){
					register_errortip_dormitory.setText(R.string.errortip_name2);
					register_errortip_dormitory.setVisibility(View.VISIBLE);
				}
				else
				{
					register_errortip_dormitory.setVisibility(View.INVISIBLE);
				}
			}
		}
	});
	   register_etpassword.setOnFocusChangeListener(new  OnFocusChangeListener() {
		
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			if(!hasFocus)
			{
				if(register_etpassword.getText()==null|| register_etpassword.getText().toString()==""){
					register_errortip_password.setText(R.string.errortip_name2);
					register_errortip_password.setVisibility(View.VISIBLE);
				}
				else {
					register_errortip_password.setVisibility(View.INVISIBLE);
				}
			}
		}
	});
	   register_errortip_again_password.setOnFocusChangeListener(new OnFocusChangeListener() {
		
		@Override
		public void onFocusChange(View v, boolean hasFocus) {
			// TODO Auto-generated method stub
			if(!hasFocus)
			{
				if(register_again_etpassword.getText()==null || register_again_etpassword.getText().toString()==""){
					register_errortip_again_password.setText(R.string.errortip_name2);
					register_errortip_again_password.setVisibility(View.VISIBLE);
				}
				else if (register_again_etpassword.getText().toString()!= register_etpassword.getText().toString()) {
					register_errortip_again_password.setText("*两次输入密码不一样");
				}
				else{
					register_errortip_again_password.setVisibility(View.INVISIBLE);
				}
			}
		}
	});
   }
   public void  OnClick(View v)
   {
	  String sql="insert into User (username,password,email,Dormitory) Values ('"
			  +register_etname.getText().toString() +"','"
			  +register_etpassword.getText().toString() +"','"
			  +register_et_mailboxname.getText().toString()+"','"
			  +register_et_dormitoryname.getText().toString()+"')";
	  
	  if(null!=register_etname.getText().toString() && null!=register_etpassword.getText().toString() && 
		 null!=register_et_mailboxname.getText().toString() && null!=register_et_dormitoryname.getText().toString() && 
		 null!=register_again_etpassword.getText().toString()){
		  db.execSQL(sql);
	 String  sql1="select count(*) from User";
	      
		  Toast.makeText(this, "注册成功-->生成"+db.rawQuery(sql1, null).getCount()+"条记录", Toast.LENGTH_SHORT).show();
		  //db.close();
		  
		  
	  }
	
	  
   }
 
   
	   
   
}
